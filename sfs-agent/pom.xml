<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.zib.sfs</groupId>
    <artifactId>sfs</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>sfs-agent</artifactId>
  <packaging>jar</packaging>
  <name>sfs-agent</name>
  <url>https://github.com/robert-schmidtke/hdfs-statistics-adapter</url>

  <properties>
    <!-- Compile dependencies -->
    <asm-all.version>5.2</asm-all.version>
    <flatbuffers.version>1.7.1-1-SNAPSHOT</flatbuffers.version>
    <grpc.version>1.6.1</grpc.version>
    <protobuf.version>3.4.0</protobuf.version>

    <!-- Test dependencies -->
    <junit.version>4.12</junit.version>

    <!-- Plugin configurations -->
    <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
    <exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
    <iterator-maven-plugin.version>0.5.1</iterator-maven-plugin.version>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    <maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
    <maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
    <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
    <protobuf-maven-plugin.version>0.5.0</protobuf-maven-plugin.version>

    <!-- Misc. properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.source.version>1.8</java.source.version>
    <java.target.version>1.8</java.target.version>

    <flatc.bin>/usr/local/bin/flatc</flatc.bin>
    <grpc.plugin>/usr/local/bin/grpc_cpp_plugin</grpc.plugin>
    <grpc.include.dir>/usr/local/include</grpc.include.dir>
    <grpc.lib.dir>/usr/local/lib</grpc.lib.dir>
    <protoc.bin>/usr/local/bin/protoc</protoc.bin>
    <protobuf.include.dir>/usr/local/include</protobuf.include.dir>
    <protobuf.lib.dir>/usr/local/lib</protobuf.lib.dir>
  </properties>

  <profiles>
    <profile>
      <id>linux-properties</id>
      <activation>
        <os>
          <name>Linux</name>
        </os>
      </activation>
      <properties>
        <libsfs.name>libsfs.so</libsfs.name>
      </properties>
    </profile>

    <profile>
      <id>osx-properties</id>
      <activation>
        <os>
          <name>Mac OS X</name>
        </os>
      </activation>
      <properties>
        <libsfs.name>libsfs.dylib</libsfs.name>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>com.google.flatbuffers</groupId>
      <artifactId>flatbuffers-java</artifactId>
      <version>${flatbuffers.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-core</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <!-- Runtime byte code rewriting -->
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-all</artifactId>
      <version>${asm-all.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.source.version}</source>
          <target>${java.target.version}</target>
          <compilerArgs>
            <arg>-Xlint</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <finalName>${project.artifactId}</finalName>
              <artifactSet>
                <includes>
                  <include>com.google.flatbuffers:flatbuffers-java</include>
                  <include>com.google.guava:guava</include>
                  <include>com.google.instrumentation:instrumentation-api</include>
                  <include>com.google.protobuf:protobuf-java</include>
                  <include>io.grpc:*</include>
                  <include>io.netty:*</include>
                  <include>io.opencensus:opencensus-api</include>
                  <include>org.ow2.asm:asm-all</include>
                </includes>
              </artifactSet>
              <relocations>
                <relocation>
                  <pattern>com.google.flatbuffers</pattern>
                  <shadedPattern>de.zib.sfs.shaded.com.google.flatbuffers</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.guava</pattern>
                  <shadedPattern>de.zib.sfs.shaded.com.google.guava</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.protobuf</pattern>
                  <shadedPattern>de.zib.sfs.shaded.com.google.protobuf</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.lmax</pattern>
                  <shadedPattern>de.zib.sfs.shaded.com.lmax</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.grpc</pattern>
                  <shadedPattern>de.zib.sfs.shaded.io.grpc</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.netty</pattern>
                  <shadedPattern>de.zib.sfs.shaded.io.netty</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.ow2.asm</pattern>
                  <shadedPattern>de.zib.sfs.shaded.org.ow2.asm</shadedPattern>
                </relocation>
              </relocations>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>-Xms1024m -Xmx2048m</argLine>
          <reuseForks>false</reuseForks>
          <forkCount>1</forkCount>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <!-- Create target output directories for protoc -->
          <execution>
            <id>mkdirs-protoc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>mkdir</executable>
              <arguments>
                <argument>-p</argument>
                <argument>${project.build.directory}/generated-sources/protobuf/native/agent/rpc</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Generate C++ sources for the native agent -->
          <execution>
            <id>generate-rpc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <arguments>
                <argument>--proto_path=${project.build.sourceDirectory}/../proto</argument>
                <argument>--cpp_out=${project.build.directory}/generated-sources/protobuf/native/agent/rpc</argument>
                <argument>--grpc_out=${project.build.directory}/generated-sources/protobuf/native/agent/rpc</argument>
                <argument>--plugin=protoc-gen-grpc=${grpc.plugin}</argument>
                <argument>${project.build.sourceDirectory}/../proto/sfs.proto</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Generate Java Operation Statistics -->
          <execution>
            <id>generate-fbs</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${flatc.bin}</executable>
              <arguments>
                <argument>--java</argument>
                <argument>-o</argument>
                <argument>${project.build.directory}/generated-sources/flatbuffers/java</argument>
                <argument>${project.build.sourceDirectory}/../fbs/operation_statistics.fbs</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Build the native agent -->
          <execution>
            <id>make-sfs</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>make</executable>
              <arguments>
                <argument>sfs</argument>
                <!-- ${java.home} points to the JRE running this command, 
                  so assuming it is a JDK as well, go one level up. -->
                <argument>JDK_HOME=${java.home}/..</argument>
                <argument>PROTOBUF_INCLUDE_DIR=${protobuf.include.dir}</argument>
                <argument>PROTOBUF_LIB_DIR=${protobuf.lib.dir}</argument>
                <argument>GRPC_INCLUDE_DIR=${grpc.include.dir}</argument>
                <argument>GRPC_LIB_DIR=${grpc.lib.dir}</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Clean the native agent -->
          <execution>
            <id>make-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>make</executable>
              <arguments>
                <argument>clean</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Test the uninstrumented I/O classes -->
          <!-- single-threaded only -->
          <execution>
            <id>test-uninstrumented</id>
            <phase>test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Djava.io.tmpdir=${java.io.tmpdir}</argument>
                <argument>-ea</argument>
                <argument>-esa</argument>
                <argument>-cp</argument>
                <argument>.:${project.build.directory}/classes:${project.build.directory}/test-classes</argument>
                <argument>de.zib.sfs.instrument.InstrumentationTest</argument>
                <argument>all,false</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Add generated FlatBuffers sources to compilation -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-fbs-sourcse</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/flatbuffers/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.soebes.maven.plugins</groupId>
        <artifactId>iterator-maven-plugin</artifactId>
        <version>${iterator-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>iterator</goal>
            </goals>
            <configuration>
              <!-- Test the instrumented I/O classes -->
              <!-- one benchmark at a time, with and without threading if applicable -->
              <items>
                <item>stream,false</item>
                <item>stream,true</item>
                <item>random,false</item>
                <item>channel,false</item>
                <item>channel,true</item>
                <item>mapped,false</item>
                <item>mapped,true</item>
                <item>zip,false</item>
              </items>
              <pluginExecutors>
                <pluginExecutor>
                  <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                  </plugin>
                  <goal>exec</goal>
                  <configuration>
                    <executable>java</executable>
                    <arguments>
                      <argument>-agentpath:${project.build.directory}/${libsfs.name}=trans_jar=${project.build.directory}/sfs-agent.jar,key=test,bin_duration=1000,cache_size=120,out_dir=${project.build.directory},out_fmt=bb,verbose=n,trace_mmap=n,instr_skip=n,trace_fds=y,use_proxy=n</argument>
                      <argument>-ea</argument>
                      <argument>-esa</argument>
                      <argument>-cp</argument>
                      <argument>.:${project.build.directory}/test-classes</argument>
                      <argument>de.zib.sfs.instrument.InstrumentationTest</argument>
                      <argument>@item@</argument>
                    </arguments>
                  </configuration>
                </pluginExecutor>
              </pluginExecutors>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf-maven-plugin.version}</version>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
