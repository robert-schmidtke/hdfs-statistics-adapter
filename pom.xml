<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.zib.hdfs</groupId>
  <artifactId>hdfs-statistics-adapter</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>hdfs-statistics-adapter</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!-- Compile dependencies -->
    <asm-all.version>5.1</asm-all.version>
    <commons-lang3.version>3.5</commons-lang3.version>
    <disruptor.version>3.3.6</disruptor.version>
    <flink.version>1.1.3</flink.version>
    <grpc.version>1.0.1</grpc.version>
    <hadoop.version>2.7.3</hadoop.version>
    <log4j.version>2.7</log4j.version>
    <protobuf-java.version>3.0.0</protobuf-java.version>

    <!-- Test dependencies -->
    <junit.version>4.12</junit.version>

    <!-- Plugin configurations -->
    <exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
    <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
    <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
    <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
    <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
    <protobuf-maven-plugin.version>0.5.0</protobuf-maven-plugin.version>

    <!-- Misc. properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.source.version>1.8</java.source.version>
    <java.target.version>1.8</java.target.version>

    <protoc.bin>/usr/local/bin/protoc</protoc.bin>
    <protobuf.include.dir>/usr/local/include</protobuf.include.dir>
    <protobuf.lib.dir>/usr/local/lib</protobuf.lib.dir>
    <grpc.plugin>/usr/local/bin/grpc_cpp_plugin</grpc.plugin>
    <grpc.include.dir>/usr/local/include</grpc.include.dir>
    <grpc.lib.dir>/usr/local/lib</grpc.lib.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf-java.version}</version>
    </dependency>

    <!-- Enables asynchronous logging for log4j -->
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>${disruptor.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-core</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-netty</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-stub</artifactId>
      <version>${grpc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-core</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
      <exclusions>
        <!-- Don't use their log4j, we provide our own -->
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>

        <!-- Same goes for asm -->
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-runtime_2.11</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
      <exclusions>
        <!-- Don't use their log4j, we provide our own -->
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>

        <!-- Same goes for asm -->
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
      <exclusions>
        <!-- Don't use their log4j, we provide our own -->
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>

        <!-- Same goes for asm -->
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
      <exclusions>
        <!-- Don't use their log4j, we provide our own -->
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>

        <!-- Same goes for asm -->
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <version>${hadoop.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <version>${hadoop.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- Runtime byte code rewriting -->
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-all</artifactId>
      <version>${asm-all.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.source.version}</source>
          <target>${java.target.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <finalName>${project.artifactId}</finalName>
              <artifactSet>
                <includes>
                  <include>com.google.guava:guava</include>
                  <include>com.google.protobuf:protobuf-java</include>
                  <include>com.lmax:disruptor</include>
                  <include>io.grpc:*</include>
                  <include>io.netty:*</include>
                  <include>org.apache.commons:commons-lang3</include>
                  <include>org.apache.logging.log4j:log4j-api</include>
                  <include>org.apache.logging.log4j:log4j-core</include>
                  <include>org.ow2.asm:asm-all</include>
                </includes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>-Xms1024m -Xmx2048m</argLine>
          <reuseForks>false</reuseForks>
          <forkCount>1</forkCount>
          <classpathDependencyExcludes>
            <!-- Flink shades Hadoop 2.3.0 which messes up our classpath 
              during testing, so exclude it. -->
            <!-- Flink is not needed during our tests anyway. -->
            <classpathDependencyExclude>org.apache.flink:flink-annotations</classpathDependencyExclude>
            <classpathDependencyExclude>org.apache.flink:flink-core</classpathDependencyExclude>
            <classpathDependencyExclude>org.apache.flink:flink-metrics-core</classpathDependencyExclude>
            <classpathDependencyExclude>org.apache.flink:flink-shaded-hadoop2</classpathDependencyExclude>
          </classpathDependencyExcludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <!-- Create target output directories for protoc -->
          <execution>
            <id>mkdirs-protoc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>mkdir</executable>
              <arguments>
                <argument>-p</argument>
                <argument>${project.build.directory}/generated-sources/protobuf/native/agent/rpc/proto</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Generate C++ sources for the native agent -->
          <execution>
            <id>generate-rpc</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${protoc.bin}</executable>
              <arguments>
                <argument>--proto_path=${project.build.sourceDirectory}/../proto</argument>
                <argument>--cpp_out=${project.build.directory}/generated-sources/protobuf/native/agent/rpc/proto</argument>
                <argument>--grpc_out=${project.build.directory}/generated-sources/protobuf/native/agent/rpc/proto</argument>
                <argument>--plugin=protoc-gen-grpc=${grpc.plugin}</argument>
                <argument>${project.build.sourceDirectory}/../proto/sfs.proto</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Build the native agent -->
          <execution>
            <id>make-sfs</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>make</executable>
              <arguments>
                <argument>sfs</argument>
                <!-- ${java.home} points to the JRE running this command, 
                  so assuming it is a JDK as well, go one level up. -->
                <argument>JDK_HOME=${java.home}/..</argument>
                <argument>PROTOBUF_INCLUDE_DIR=${protobuf.include.dir}</argument>
                <argument>PROTOBUF_LIB_DIR=${protobuf.lib.dir}</argument>
                <argument>GRPC_INCLUDE_DIR=${grpc.include.dir}</argument>
                <argument>GRPC_LIB_DIR=${grpc.lib.dir}</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Clean the native agent -->
          <execution>
            <id>make-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>make</executable>
              <arguments>
                <argument>clean</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>${protobuf-maven-plugin.version}</version>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf-java.version}:exe:${os.detected.classifier}</protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
